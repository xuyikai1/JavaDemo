# kafka 配置
spring:
  kafka:
    bootstrap-servers: 192.168.10.149:9092
    producer:
      retries: 0 # 发送消息失败的重试次数
      batch-size: 16384
      buffer-memory: 33554432 # 设置kafka 生产者内存缓存区的大小（32M）
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: 1 # 生产端最重要的选项,可靠性投递的配置项
# acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。 -> 消息发过去就完事了
# acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。 -> 需要至少一个节点响应
# acks=-1: 表示分区leader必须等待消息被成功写入到所有的ISR副本(同步副本)中才认为producer请求成功。
# acks=-1这种方案提供最高的消息持久性保证，但是理论上吞吐率也是最差的。